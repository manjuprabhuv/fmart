package com.fmart.hibernate.pojos;

// Generated Apr 28, 2015 3:08:12 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.xml.bind.annotation.XmlTransient;

import org.codehaus.jackson.annotate.JsonBackReference;
import org.codehaus.jackson.annotate.JsonIgnore;

/**
 * Customer generated by hbm2java
 */
@Entity
@Table(name = "customer", schema = "fmart")
public class Customer implements java.io.Serializable {

	private int id;
	private Company company = new Company();
	private Employee employeeByUpdatedby;
	private Employee employeeByCreatedby;
	private String name;
	private String address;
	private Long phone;
	private String phoneString;
	private Date created;
	private Date updated;
	private Set<Sale> sales = new HashSet<Sale>(0);

	public Customer() {
	}

	public Customer(int id) {
		this.id = id;
	}

	public Customer(int id,Company company, Employee employeeByUpdatedby,
			Employee employeeByCreatedby, String name, String address,
			Long phone, String phoneString, Date created, Date updated,
			Set<Sale> sales) {
		this.id = id;
		this.company = company;
		this.employeeByUpdatedby = employeeByUpdatedby;
		this.employeeByCreatedby = employeeByCreatedby;
		this.name = name;
		this.address = address;
		this.phone = phone;
		this.phoneString = phoneString;
		this.created = created;
		this.updated = updated;
		this.sales = sales;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@JsonBackReference
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "company_id")
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}
	
	@XmlTransient
	@JsonIgnore
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updatedby")
	public Employee getEmployeeByUpdatedby() {
		return this.employeeByUpdatedby;
	}

	public void setEmployeeByUpdatedby(Employee employeeByUpdatedby) {
		this.employeeByUpdatedby = employeeByUpdatedby;
	}
	
	@XmlTransient
	@JsonIgnore
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "createdby")
	public Employee getEmployeeByCreatedby() {
		return this.employeeByCreatedby;
	}

	public void setEmployeeByCreatedby(Employee employeeByCreatedby) {
		this.employeeByCreatedby = employeeByCreatedby;
	}

	@Column(name = "name", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "address", length = 100)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "phone")
	public Long getPhone() {
		return this.phone;
	}

	public void setPhone(Long phone) {
		this.phone = phone;
	}

	@Column(name = "phone_string", length = 12)
	public String getPhoneString() {
		return this.phoneString;
	}

	public void setPhoneString(String phoneString) {
		this.phoneString = phoneString;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "created", length = 21)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "updated", length = 21)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}
	@XmlTransient
	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "customer")
	public Set<Sale> getSales() {
		return this.sales;
	}

	public void setSales(Set<Sale> sales) {
		this.sales = sales;
	}

}
