package com.fmart.hibernate.pojos;

// Generated Mar 26, 2015 11:09:05 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.xml.bind.annotation.XmlTransient;

import org.codehaus.jackson.annotate.JsonBackReference;
import org.codehaus.jackson.annotate.JsonIgnore;
import org.codehaus.jackson.annotate.JsonIgnoreProperties;
import org.codehaus.jackson.annotate.JsonManagedReference;

import com.fmart.framework.hibernate.FMartGenericDAO;
import com.fmart.ui.beans.UserSession;
/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product", schema = "fmart")
public class Product implements java.io.Serializable,Comparable<Product> {

	private int id;
	private ProductGrp productGrp = new ProductGrp();
	private String name;
	private String image;
	private Integer unitPrice;
	private byte[] imagesrc;
	private Set<Inventory> inventories = new HashSet<Inventory>(0);
	private Set<SaleDetail> saleDetails = new HashSet<SaleDetail>(0);
	private Set<PurchaseDetail> purchaseDetails = new HashSet<PurchaseDetail>(0);
	
	private String nameAndInventory=null;
	private String productGrp_name;
	private Set<GodownInventory> godownInventories = new HashSet<GodownInventory>(
			0);

	public Product() {
	}

	public Product(int id) {
		this.id = id;
	}

	public Product(int id, ProductGrp productGrp, String name, String image,
			Integer unitPrice, byte[] imagesrc, Set<Inventory> inventories,
			Set<SaleDetail> saleDetails, Set<PurchaseDetail> purchaseDetails) {
		this.id = id;
		this.productGrp = productGrp;
		this.name = name;
		this.image = image;
		this.unitPrice = unitPrice;
		this.imagesrc = imagesrc;
		this.inventories = inventories;
		this.saleDetails = saleDetails;
		this.purchaseDetails = purchaseDetails;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Transient@XmlTransient@JsonIgnore
	public String getNameAndInventory() {
		return nameAndInventory;
	}

	public void setNameAndInventory(String nameAndInventory) {
		this.nameAndInventory = nameAndInventory;
	}

	@JsonBackReference@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_grp_id")
	public ProductGrp getProductGrp() {
		return this.productGrp;
	}

	public void setProductGrp(ProductGrp productGrp) {
		this.productGrp = productGrp;
		this.productGrp_name=productGrp.getName();
	}

	@Column(name = "name", length = 40)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "image", length = 40)
	public String getImage() {
		return this.image;
	}

	public void setImage(String image) {
		this.image = image;
	}

	@Column(name = "unit_price")
	public Integer getUnitPrice() {
		if(this.unitPrice==null)
			return 0;
		return this.unitPrice;
	}

	public void setUnitPrice(Integer unitPrice) {
		this.unitPrice = unitPrice;
	}
	
	@XmlTransient
	@JsonIgnore
	@Column(name = "imagesrc")
	public byte[] getImagesrc() {
		return this.imagesrc;
	}

	public void setImagesrc(byte[] imagesrc) {
		this.imagesrc = imagesrc;
	}
	@XmlTransient
	@JsonIgnore
	@JsonManagedReference@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<Inventory> getInventories() {
		return this.inventories;
	}

	public void setInventories(Set<Inventory> inventories) {
		this.inventories = inventories;
	}
	
	@XmlTransient
	@JsonIgnore
	@JsonManagedReference@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<SaleDetail> getSaleDetails() {
		return this.saleDetails;
	}

	public void setSaleDetails(Set<SaleDetail> saleDetails) {
		this.saleDetails = saleDetails;
	}

	@XmlTransient
	@JsonIgnore
	@JsonManagedReference@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<PurchaseDetail> getPurchaseDetails() {
		return this.purchaseDetails;
	}

	public void setPurchaseDetails(Set<PurchaseDetail> purchaseDetails) {
		this.purchaseDetails = purchaseDetails;
	}

	public void queryInventory(){
		FMartGenericDAO dao = new FMartGenericDAO();
		nameAndInventory=dao.queryInventory(name,id,UserSession.getSession().getCompanyId());
	}
	
	private Employee employeeByUpdatedBy;
	private Employee employeeByCreatedBy;
	private Date created;
	private Date updated;

	@JsonBackReference
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by")
	public Employee getEmployeeByCreatedBy() {
		return this.employeeByCreatedBy;
	}

	public void setEmployeeByCreatedBy(Employee employeeByCreatedBy) {
		this.employeeByCreatedBy = employeeByCreatedBy;
	}

	@JsonBackReference
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updated_by")
	public Employee getEmployeeByUpdatedBy() {
		return this.employeeByUpdatedBy;
	}

	public void setEmployeeByUpdatedBy(Employee employeeByUpdatedBy) {
		this.employeeByUpdatedBy = employeeByUpdatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", length = 35)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", length = 35)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Override
	public int compareTo(Product o) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Transient
	@XmlTransient
	@JsonIgnore
	public String getProductGrp_name() {
		return productGrp_name;
	}

	public void setProductGrp_name(String productGrp_name) {
		this.productGrp_name = productGrp_name;
	}
	
	@XmlTransient
	@JsonIgnore	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<GodownInventory> getGodownInventories() {
		return this.godownInventories;
	}

	public void setGodownInventories(Set<GodownInventory> godownInventories) {
		this.godownInventories = godownInventories;
	}

	
}
